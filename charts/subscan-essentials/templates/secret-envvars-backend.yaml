{{- $networkTypes := list "mainnet" "testnet" }}

{{- range $networkType, $networks := .Values }}
  {{ if not (has $networkType $networkTypes)}}
    {{- continue }}
  {{- end }}
  {{- $globalEnv := mustDeepCopy (ternary $.Values.testnetEnvVars $.Values.mainnetEnvVars (eq $networkType "testnet")) }}
  {{- range $networkName, $networkValues := $networks }}
    {{ $networkValues := $networkValues.values }}
    {{- $networkValues = mergeOverwrite (mustDeepCopy $.Values.networkTemplate) $networkValues  }}
    {{ $envs := mergeOverwrite (mustDeepCopy $globalEnv) $networkValues.envVars  }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "subscan-essentials.fullname" $networkName }}-envvars
  labels:
    {{- range $key, $value := $.Values.commonLabels }}
    {{ $key }}: "{{ $value | replace "{networkName}" $networkName | replace "{isMainnet}" (printf "%v" (eq $networkType "mainnet")) }}"
    {{- end }}
data:
    {{- range $key, $value := $envs }}
    {{- if eq $key "envFrom" }}
      {{- continue }}
    {{- end }}
    {{ $key }}: {{ $value | toString | b64enc | quote }}
    {{- end }}
  {{- end }}
{{- end }}
